(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{564:function(t,e,a){"use strict";a.r(e);var r=a(13),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"云原生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#云原生"}},[t._v("#")]),t._v(" 云原生")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("IaaS")]),t._v("：基础设施服务，Infrastructure-as-a-service")]),t._v(" "),a("li",[a("strong",[t._v("PaaS")]),t._v("：平台服务，Platform-as-a-service")]),t._v(" "),a("li",[a("strong",[t._v("SaaS")]),t._v("：软件服务，Software-as-a-service")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/muguang/images/blogs/CyberSecurity/NewTechnology/%E4%BA%91%E5%8E%9F%E7%94%9F.assets/2220386-2c06a6c6d3ecdcf5.jpg",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("微服务")]),t._v("\n微服务解决的是我们软件开发中一直追求的"),a("strong",[t._v("低耦合+高内聚")]),t._v("，记得有一次我们系统的接口出了问题，结果影响了用户的前台操作，于是黎叔拍案而起，灵魂发问：“为啥这两个会互相影响？！”")]),t._v(" "),a("p",[t._v("微服务可以解决这个问题，微服务的本质是把一块大饼分成若干块低耦合的小饼，比如一块小饼专门负责接收外部的数据，一块小饼专门负责响应前台的操作，小饼可以进一步拆分，比如负责接收外部数据的小饼可以继续分成多块负责接收不同类型数据的小饼，这样每个小饼出问题了，其它小饼还能正常对外提供服务。")]),t._v(" "),a("p",[a("strong",[t._v("DevOps")]),t._v("\nDevOps的意思就是"),a("strong",[t._v("开发和运维")]),t._v("不再是分开的两个团队，而是你中有我，我中有你的一个团队。我们现在开发和运维已经是一个团队了，但是运维方面的知识和经验还需要持续提高。")]),t._v(" "),a("p",[a("strong",[t._v("持续交付")]),t._v("\n持续交付的意思就是在不影响用户使用服务的前提下频繁把新功能发布给用户使用，要做到这点非常非常难。我们现在两周一个版本，每次上线之后都会给不同的用户造成不同程度的影响。")]),t._v(" "),a("p",[a("strong",[t._v("容器化")]),t._v("\n容器化的好处在于运维的时候不需要再关心每个服务所使用的技术栈了，每个服务都被无差别地封装在容器里，可以被无差别地管理和维护，现在比较流行的工具是docker和k8s。")]),t._v(" "),a("p",[t._v("所以你也可以简单地把云原生理解为："),a("strong",[t._v("云原生 = 微服务 + DevOps + 持续交付 + 容器化")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("风险类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("风险引入途径")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("云原生网络安全风险")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("访问控制拉度过粗")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("网络分离管控不合理")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("云原生编排及组件安全  风险")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编排工具自身漏洞")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编排组件不安全配里")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不同安全级容器混合部署")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编排组件资源使用不设限")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("编排节点访问控制策略配里不当")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像安全风险")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像含软件漏洞")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像配里缺陷")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像来源不可信")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像仓库安全风险")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像仓库自身漏洞及管理问越")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("镜像获取通道不安全")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("容器逃逸攻击")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("容器危险配里")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("容器危险挂载")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相关程序漏洞")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("宿主机内核漏洞")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("安全容器逃逸风险")])])])]),t._v(" "),a("h1",{attrs:{id:"《云应用安全技术规范》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《云应用安全技术规范》"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.c-csa.cn/u_file/photo/20211231/ceb7664755.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("《云应用安全技术规范》"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"《云原生安全技术规范》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《云原生安全技术规范》"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://c-csa.cn/u_file/photo/20220311/c53464b4f2.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("《云原生安全技术规范》"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("参考链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/a37baa7c3eff",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是云原生"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("[绿盟-云原生安全技术报告]("),a("a",{attrs:{href:"http://blog.nsfocus.net/wp-content/uploads/2021/01/Technical-Report-of-Cloud-Native-Security.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Technical-Report-of-Cloud-Native-Security.pdf (nsfocus.net)"),a("OutboundLink")],1),t._v(")")])])}),[],!1,null,null,null);e.default=n.exports}}]);